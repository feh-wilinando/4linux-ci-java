<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.example</groupId>
	<artifactId>dexter</artifactId>
	<version>0.0.1.RELEASE</version>
	<packaging>war</packaging>

	<name>Dexter</name>
	<description>Demo project for Spring Boot</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.4.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<!-- <sonar.sources>src/main</sonar.sources> <sonar.tests>src/test</sonar.tests> -->
		<!-- <sonar.junit.reportPaths>target/surefire-reports</sonar.junit.reportPaths> 
			<sonar.cobertura.reportPath>${project.basedir}/target/site/cobertura/coverage.xml</sonar.cobertura.reportPath> -->
		<sonar.sourceEncoding>UTF-8</sonar.sourceEncoding>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>

	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>com.codeborne</groupId>
			<artifactId>phantomjsdriver</artifactId>
			<version>1.4.1</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>21.0</version>
		</dependency>

		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<profiles>
						<profile>dev</profile>
						<profile>prod</profile>
					</profiles>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.wildfly.plugins</groupId>
				<artifactId>wildfly-maven-plugin</artifactId>
				<version>1.2.1.Final</version>
				<configuration>
					<hostname>${wildfly-hostname}</hostname>
					<port>${wildfly-port}</port>
				</configuration>
			</plugin>
			<plugin>
				<!-- use mvn cobertura:cobertura to generate cobertura reports -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<formats>
						<format>xml</format>
					</formats>
				</configuration>
			</plugin>
		</plugins>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<finalName>dexter</finalName>
	</build>


	<!-- BEGIN: Specific to mapping unit tests and covered code -->
	<profiles>
		<profile>
			<id>coverage-per-test</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<!-- Minimal supported version is 2.4 -->
						<version>2.13</version>
						<configuration>
							<properties>
								<property>
									<name>listener</name>
									<value>org.sonar.java.jacoco.JUnitListener</value>
								</property>
							</properties>
						</configuration>
					</plugin>
				</plugins>
			</build>

			<dependencies>
				<dependency>
					<groupId>org.sonarsource.java</groupId>
					<artifactId>sonar-jacoco-listeners</artifactId>
					<version>3.8</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>


		<!-- PROFILES PARA O WILDFLY -->
		<profile>
			<id>dev</id>
			<properties>
				<activatedProperties>dev</activatedProperties>
				<wildfly-home>/home/debian/wildfly-dev </wildfly-home>
				<wildfly-hostname>localhost</wildfly-hostname>
				<wildfly-port>10040</wildfly-port>
				<wildfly-username>devops</wildfly-username>
				<wildfly-password>123456</wildfly-password>
			</properties>
		</profile>

		<profile>
			<id>prod</id>
			<properties>
				<activatedProperties>prod</activatedProperties>
				<wildfly-home>/home/debian/wildfly-prod </wildfly-home>
				<wildfly-hostname>localhost</wildfly-hostname>
				<wildfly-port>10050</wildfly-port>
				<wildfly-username>devops</wildfly-username>
				<wildfly-password>123456</wildfly-password>
			</properties>
		</profile>

	</profiles>

	<distributionManagement>
		<snapshotRepository>
			<id>nexus-snapshots</id>
			<url>http://localhost:8081/repository/maven-snapshots/</url>
		</snapshotRepository>
		<repository>
			<id>nexus-releases</id>
			<url>http://localhost:8081/repository/maven-releases/</url>
		</repository>
	</distributionManagement>

	<repositories>
		<repository>
			<id>jitpack.io</id>
			<url>https://jitpack.io</url>
		</repository>
	</repositories>
	
</project>
